// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @param {Bool} $self [false] - Whether or not to include current selector
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

@mixin media-query($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin clearfix {
  *zoom: 1;
  &::before { content: " "; display: table; }
  &::after { content: " "; display: table; }
  &::after { clear: both; }
}

@mixin placeholder($color, $size, $lh){
  &::-webkit-input-placeholder { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &:-webkit-input-placeholder  { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &::-moz-input-placeholder    { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &:-moz-input-placeholder     { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &::-ms-input-placeholder     { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &:-ms-input-placeholder      { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &::input-placeholder         { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
  &:input-placeholder          { transition: color .3s; line-height: $lh; font-size: $size; color: $color; }
}

@mixin text-whith-ellipsis($font-size, $line-height, $lines-to-show) {
  display: block;
  display: -webkit-box;
  height: calc(#{$lines-to-show} * #{$line-height}); 
  font-size: $font-size;
  line-height: $line-height;
  -webkit-line-clamp: $lines-to-show;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// grid

@mixin is-grid($cols:4,$gap:40,$debug:0) {
  $halfGap: calc($gap/2);
  .is-grid {
    position: relative;
    width: auto;
    margin-left: #{calc($gap / -2)}px;
    margin-right: #{calc($gap / -2)}px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: stretch;
    justify-content: flex-start;
    @if $debug == 1 {
      &:before {
        pointer-events: none;
        content: '';
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        left: #{calc($gap / -2)}px;
        right: #{calc($gap / -2)}px;
        background: rgba(255,0,0,.2);
      }
    }
  }
  .is-grid__item {
    position: relative;
    display: block;
    width: calc((100% - #{calc($gap * $cols)}px) / #{$cols});
    margin-left: #{$halfGap}px;
    margin-right: #{$halfGap}px;
    margin-bottom: #{$gap}px;
    @if $debug == 1 { box-shadow: inset 0 0 0 1px red; }
  }
  @media only screen and (min-width: 320px) and (max-width: 667px) and (-webkit-min-device-pixel-ratio: 1.5),
  only screen and (min-width: 320px) and (max-width: 667px) and (min--moz-device-pixel-ratio: 1.5),
  only screen and (min-width: 320px) and (max-width: 667px) and (-o-min-device-pixel-ratio: 3/2),
  only screen and (min-width: 320px) and (max-width: 736px) and (-webkit-min-device-pixel-ratio: 3),
  only screen and (min-width: 320px) and (max-width: 736px) and (min--moz-device-pixel-ratio: 3),
  only screen and (min-width: 320px) and (max-width: 812px) and (-webkit-device-pixel-ratio : 3),
  only screen and (min-width: 320px) and (max-width: 736px) and (-o-min-device-pixel-ratio: 6/2) {
    .is-grid__item {
      margin-bottom: #{$halfGap}px;
    }
  }

}

@mixin media-query($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}
